name: Create and Push Docker Image to ECR

on:
  workflow_call:
    inputs:
      java-version:
        required: false
        type: string
        default: '21'
      aws-region:
        required: false
        type: string
        default: 'us-east-1'
    outputs:
      image_uri:
        description: "URI da imagem Docker publicada no ECR"
        value: ${{ jobs.create-docker-image.outputs.image_uri }}

    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

permissions:
  contents: read
  packages: write

jobs:
  create-docker-image:
    runs-on: ubuntu-latest
    outputs:
      image_uri: ${{ steps.build.outputs.image_uri }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.aws-region }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Extract Base Version
        id: version
        run: |
          set -e
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          BASE_VERSION=$(echo $CURRENT_VERSION | sed 's/-.*//')
          echo "base_version=$BASE_VERSION" >> $GITHUB_OUTPUT

      - name: Build and Push Docker image to ECR
        id: build
        env:
          AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
          IMAGE_TAG: ${{ steps.version.outputs.base_version }}
        run: |
          set -e
          ECR_REGISTRY=${AWS_ACCOUNT_ID}.dkr.ecr.${{ inputs.aws-region }}.amazonaws.com
          IMAGE_URI=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

          docker buildx build \
            --platform linux/amd64 \
            --tag $IMAGE_URI \
            --push \
            --cache-from=type=registry,ref=$ECR_REGISTRY/$ECR_REPOSITORY:build-cache \
            --cache-to=type=registry,ref=$ECR_REGISTRY/$ECR_REPOSITORY:build-cache,mode=max \
            .

          echo "image_uri=$IMAGE_URI" >> $GITHUB_OUTPUT