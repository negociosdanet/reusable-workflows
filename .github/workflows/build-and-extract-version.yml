name: Build and Extract Version

on:
  workflow_call:
    inputs:
      java-version:
        type: string
        required: false
        default: '21'
    outputs:
      version:
        value: ${{ jobs.build.outputs.version }}
      is_snapshot:
        value: ${{ jobs.build.outputs.is_snapshot }}
      is_release_candidate:
        value: ${{ jobs.build.outputs.is_release_candidate }}
      is_release:
        value: ${{ jobs.build.outputs.is_release }}

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract.outputs.version }}
      is_snapshot: ${{ steps.classify.outputs.is_snapshot }}
      is_release_candidate: ${{ steps.classify.outputs.is_release_candidate }}
      is_release: ${{ steps.classify.outputs.is_release }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ inputs.java-version }}
          cache: maven

      # - name: Cache Maven dependencies
      #   uses: actions/cache@v4
      #   with:
      #     path: ~/.m2
      #     key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
      #     restore-keys: ${{ runner.os }}-m2

      - name: Build and Test
        run: mvn clean verify

      # - name: Run Checkstyle
      #   run: mvn checkstyle:check

      - name: Extract Version
        id: extract
        run: |
          set -e
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          if [ -z "$VERSION" ]; then
            echo "Failed to extract Maven version"
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Detect Release Type
        id: classify
        run: |
          set -e
          VERSION="${{ steps.extract.outputs.version }}"
          echo "Detected version: $VERSION"

          if [[ "$VERSION" == *-SNAPSHOT ]]; then
            echo "is_snapshot=true" >> $GITHUB_OUTPUT
            echo "is_release_candidate=false" >> $GITHUB_OUTPUT
            echo "is_release=false" >> $GITHUB_OUTPUT
          elif [[ "$VERSION" == *-RC* ]]; then
            echo "is_snapshot=false" >> $GITHUB_OUTPUT
            echo "is_release_candidate=true" >> $GITHUB_OUTPUT
            echo "is_release=false" >> $GITHUB_OUTPUT
          else
            echo "is_snapshot=false" >> $GITHUB_OUTPUT
            echo "is_release_candidate=false" >> $GITHUB_OUTPUT
            echo "is_release=true" >> $GITHUB_OUTPUT
          fi