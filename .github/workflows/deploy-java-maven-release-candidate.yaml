name: Build & Test Java Project (Maven)

on:
  workflow_call:
    inputs:
      java-version:
        required: false
        type: string
        default: '21'

      dry-run:
        required: true
        type: boolean

      version:
        required: true
        type: string

permissions:
  contents: write
  packages: write

jobs:
  prepare-rc:
    name: Prepare RC Version & Deploy
    needs: build
    runs-on: ubuntu-latest
    outputs:
      next_rc_version: ${{ steps.rc.outputs.next_rc_version }}

    steps:
      - name: Checkout Project
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          ref: ${{ github.head_ref }}

      - name: Set up Java ${{ inputs.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: 'temurin'
          cache: maven

      - name: Configure Maven settings.xml
        uses: s4u/maven-settings-action@v3.1.0
        with:
          servers: |
            [{
              "id": "nexus-releases",
              "username": "${{ secrets.NEXUS_USERNAME }}",
              "password": "${{ secrets.NEXUS_PASSWORD }}"
            }]

      - name: Extract RC Version
        id: version
        run: |
          CURRENT_VERSION=${{ inputs.version }}
          NEW_VERSION=$(echo $CURRENT_VERSION | sed 's/-.*//')
          echo "release_candidate_version=$RELEASE_CANDIDATE_VERSION" >> $GITHUB_OUTPUT

      - name: Calculate Next RC Version
        id: rc
        run: |
          git fetch --tags
          BASE=${{ steps.version.outputs.release_candidate_version }}
          TAGS=$(git tag -l "${BASE}-RC*" || true)
          echo "Existing RC tags:"
          echo "$TAGS"

          RC_COUNT=1
          if [[ ! -z "$TAGS" ]]; then
            LAST_RC=$(echo "$TAGS" | sed -E 's/.*-RC([0-9]+)/\1/' | sort -nr | head -n1)
            RC_COUNT=$((LAST_RC + 1))
          fi

          NEW_RC_VERSION="${BASE}-RC${RC_COUNT}"
          echo "next_rc_version=$NEW_RC_VERSION" >> $GITHUB_OUTPUT

      - name: Set RC Version
        run: |
          mvn versions:set -DnewVersion=${{ steps.rc.outputs.next_rc_version }}
          mvn versions:commit

      - name: Skipping deploy to Nexus
        if: ${{ inputs.dry-run == true }}
        run: echo "ðŸŸ¡ Dry-run mode ON â€” skipping actual deploy to Nexus."

      - name: Deploy to Nexus
        if: ${{ inputs.dry-run == false }}
        run: mvn deploy -DskipTests --batch-mode

      - name: Commit RC Version
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git commit -am "chore(release): set RC version ${{ steps.rc.outputs.next_rc_version }}"
          git push


  tag-rc:
    name: Generate new Tag RC
    needs: prepare-rc
    runs-on: ubuntu-latest
    env:
      RC_VERSION: ${{ needs.prepare-rc.outputs.next_rc_version }}

    steps:
      - name: Checkout Project
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          ref: ${{ github.head_ref }}

      - name: Tag RC Version
        run: |
          git tag "$RC_VERSION"
          git push origin "$RC_VERSION"
