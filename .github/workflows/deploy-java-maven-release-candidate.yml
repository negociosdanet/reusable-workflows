name: Deploy Java Release Candidate to Nexus

on:
  workflow_call:
    inputs:
      java-version:
        required: false
        type: string
        default: '21'
      dry-run:
        required: true
        type: boolean
      version:
        required: true
        type: string
    secrets:
      NEXUS_USERNAME:
        required: true
      NEXUS_PASSWORD:
        required: true

permissions:
  contents: read
  packages: write

jobs:
  release-candidate-deploy:
    name: Release Candidate - Prepare and Deploy
    runs-on: ubuntu-latest
    outputs:
      next_rc_version: ${{ steps.rc.outputs.next_rc_version }}

    steps:
      - name: Checkout Project
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          ref: ${{ github.ref_name }}

      - name: Set up Java ${{ inputs.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: temurin
          cache: maven

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Configure Maven settings.xml
        uses: s4u/maven-settings-action@v3.1.0
        with:
          servers: |
            [{
              "id": "nexus-releases",
              "username": "${{ secrets.NEXUS_USERNAME }}",
              "password": "${{ secrets.NEXUS_PASSWORD }}"
            }]

      - name: Extract Base Version
        id: version
        run: |
          set -euo pipefail
          CURRENT_VERSION="${{ inputs.version }}"
          BASE_VERSION=$(echo "$CURRENT_VERSION" | sed 's/-.*//')
          echo "release_candidate_version=$BASE_VERSION" >> $GITHUB_OUTPUT

      - name: Calculate Next RC Version
        id: rc
        run: |
          set -euo pipefail
          git fetch --tags
          BASE="${{ steps.version.outputs.release_candidate_version }}"
          TAGS=$(git tag -l "$BASE-RC*" || true)

          RC_COUNT=1
          if [[ ! -z "$TAGS" ]]; then
            LAST_RC=$(echo "$TAGS" | sed -E 's/.*-RC([0-9]+).*/\1/' | sort -nr | head -n1 || echo 0)
            RC_COUNT=$((LAST_RC + 1))
          fi

          NEW_RC_VERSION="$BASE-RC$RC_COUNT"
          echo "next_rc_version=$NEW_RC_VERSION" >> $GITHUB_OUTPUT

      - name: Set RC Version
        run: |
          set -euo pipefail
          mvn versions:set -DnewVersion=${{ steps.rc.outputs.next_rc_version }}
          mvn versions:commit

      - name: Validate Project
        run: mvn verify

      - name: Skipping deploy to Nexus
        if: ${{ inputs.dry-run == true }}
        run: echo "ðŸŸ¡ Dry-run mode ON â€” skipping actual deploy to Nexus."

      - name: Deploy to Nexus
        if: ${{ inputs.dry-run == false }}
        run: mvn deploy -DskipTests --batch-mode

      - name: Commit RC Version
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git diff --quiet || git commit -am "chore(release): set RC version ${{ steps.rc.outputs.next_rc_version }}" || true
          git push

  release-candidate-tag:
    name: Release Candidate - Tag
    needs: release-candidate-deploy
    runs-on: ubuntu-latest
    env:
      RC_VERSION: ${{ needs.release-candidate-deploy.outputs.next_rc_version }}
    steps:
      - name: Checkout Project
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          ref: ${{ github.ref_name }}

      - name: Tag RC Version
        run: |
          set -euo pipefail
          git tag "$RC_VERSION"
          git push origin "$RC_VERSION"
